package idiocy.dsp.core

import idiocy.dsp.sample.StereoSampleFile
import utest._

object FlacTest extends TestSuite {
  val tests = Tests {
    'main - {

      //generated by DecodeFlacToWav
      val s0 = new StereoSampleFile(
        "samples/44-PedalOffMezzoPiano1Ambienttst.wav")
      //generated by ffmpeg
      val s1 = new StereoSampleFile(
        "samples/44-PedalOffMezzoPiano1Ambient.wav")
      //the original
      val s2 = new StereoSampleFile(
        "samples/44-PedalOffMezzoPiano1Ambient.flac")

      //test against what we created from DecodeFlacToWav (assuming that is well tested)
      assert(s0.lBuffer.length == s2.lBuffer.length)
      var i = 0
      while (i < s0.lBuffer.length) {
        if (math.abs(s0.lBuffer(i) - s2.lBuffer(i)) > 1e-8.toFloat) {
          println("Failure " + i + " " + s0.lBuffer(i) + " " + s2.lBuffer(i))
          assert(false)
        }
        i += 1
      }

      //test against what ffmpeg generated. Interestingly, this quite different (look at the lower tolerance)
      assert(s1.lBuffer.length == s2.lBuffer.length)
      i = 0
      while (i < s1.lBuffer.length) {
        if (math.abs(s1.lBuffer(i) - s2.lBuffer(i)) > 1e-4.toFloat) {
          println("Failure " + i + " " + s1.lBuffer(i) + " " + s2.lBuffer(i))
          assert(false)
        }
        i += 1
      }
    }
  }
}
